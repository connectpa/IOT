#
# Copyright Â© 2016-2020 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


version: '2.2'

services:
  zookeeper:
#    restart: always
    image: "zookeeper:3.5"
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
  redis:
#    restart: always
    image: redis:4.0
    ports:
      - "6379"
  tb-js-executor:
#    restart: always
    image: "${DOCKER_REPO}/${JS_EXECUTOR_DOCKER_NAME}:${TB_VERSION}"
    scale: 20
    env_file:
      - tb-js-executor.env
  tb-core1:
#    restart: always
#    image: "psacr.azure.io/tb-node:latest"
    image: "${DOCKER_REPO}/${TB_NODE_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-core1
      TB_SERVICE_TYPE: tb-core
      SECURITY_OAUTH2_ENABLED: "true"
      SECURITY_OAUTH2_LOGINPROCESSINGURL: /login/oauth2/code/
      SECURITY_OAUTH2_CLIENTS_DEFAULT_LOGINBUTTONLABEL: Keycloak
      SECURITY_OAUTH2_CLIENTS_DEFAULT_LOGINBUTTONICON: mdi:key
      SECURITY_OAUTH2_CLIENTS_DEFAULT_CLIENTNAME: TB Keycloak
      SECURITY_OAUTH2_CLIENTS_DEFAULT_CLIENTID: thingsboard
      SECURITY_OAUTH2_CLIENTS_DEFAULT_CLIENTSECRET: thingsboard
      SECURITY_OAUTH2_CLIENTS_DEFAULT_ACCESSTOKENURI: http://keycloak:8080/auth/realms/thingsboard/protocol/openid-connect/token
      SECURITY_OAUTH2_CLIENTS_DEFAULT_SCOPE: openid,email,profile
      SECURITY_OAUTH2_CLIENTS_DEFAULT_REDIRECTURITEMPLATE: http://localhost/login/oauth2/code/
      SECURITY_OAUTH2_CLIENTS_DEFAULT_AUTHORIZATIONURI: http://keycloak:8080/auth/realms/thingsboard/protocol/openid-connect/auth
      SECURITY_OAUTH2_CLIENTS_DEFAULT_JWKSETURI: http://keycloak:8080/auth/realms/thingsboard/protocol/openid-connect/certs
      SECURITY_OAUTH2_CLIENTS_DEFAULT_AUTHORIZATIONGRANTTYPE: authorization_code
      SECURITY_OAUTH2_CLIENTS_DEFAULT_CLIENTAUTENTICATIONMETHOD: post
      SECURITY_OAUTH2_CLIENTS_DEFAULT_USERINFOURI: http://keycloak:8080/auth/realms/thingsboard/protocol/openid-connect/userinfo
      SECURITY_OAUTH2_CLIENTS_DEFAULT_USERNAMEATTRIBUTENAME: email
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_TYPE: basic
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_ALLOWCREATION: "true"
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_ACTIVATEUSER: "false"
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_BASIC_EMAILATTRIBUTEKEY: email
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_BASIC_FIRSTNAMEATTRIBUTEKEY: given_name
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_BASIC_LASTNAMEATTRIBUTEKEY: family_name
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_BASIC_TENANTNAMESTRATEGY: email
      SECURITY_OAUTH2_CLIENTS_DEFAULT_MAPPERCONFIG_BASIC_ALWAYSFULLSCREEN: "false"
    env_file:
      - tb-node.env
    volumes:
      - ./tb-node/conf:/config
      - ./tb-node/log:/var/log/thingsboard
    depends_on:
      - zookeeper
      - redis
      - tb-js-executor
      - tb-rule-engine1
      - tb-rule-engine2
#  tb-core2:
##    restart: always
#    image: "${DOCKER_REPO}/${TB_NODE_DOCKER_NAME}:${TB_VERSION}"
#    ports:
#      - "8080"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200m"
#        max-file: "30"
#    environment:
#      TB_SERVICE_ID: tb-core2
#      TB_SERVICE_TYPE: tb-core
#    env_file:
#      - tb-node.env
#    volumes:
#      - ./tb-node/conf:/config
#      - ./tb-node/log:/var/log/thingsboard
#    depends_on:
#      - zookeeper
#      - redis
#      - tb-js-executor
#      - tb-rule-engine1
#      - tb-rule-engine2
  tb-rule-engine1:
#    restart: always
#    image: "psacr.azure.io/tb-node:latest"
    image: "${DOCKER_REPO}/${TB_NODE_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-rule-engine1
      TB_SERVICE_TYPE: tb-rule-engine
    env_file:
      - tb-node.env
    volumes:
      - ./tb-node/conf:/config
      - ./tb-node/log:/var/log/thingsboard
    depends_on:
      - zookeeper
      - redis
      - tb-js-executor
  tb-rule-engine2:
#    restart: always
#    image: "psacr.azure.io/tb-node:latest"
    image: "${DOCKER_REPO}/${TB_NODE_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-rule-engine2
      TB_SERVICE_TYPE: tb-rule-engine
    env_file:
      - tb-node.env
    volumes:
      - ./tb-node/conf:/config
      - ./tb-node/log:/var/log/thingsboard
    depends_on:
      - zookeeper
      - redis
      - tb-js-executor
  tb-mqtt-transport1:
#    restart: always
    image: "${DOCKER_REPO}/${MQTT_TRANSPORT_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "1883"
    environment:
      TB_SERVICE_ID: tb-mqtt-transport1
    env_file:
      - tb-mqtt-transport.env
    volumes:
      - ./tb-transports/mqtt/conf:/config
      - ./tb-transports/mqtt/log:/var/log/tb-mqtt-transport
    depends_on:
      - zookeeper
#  tb-mqtt-transport2:
##    restart: always
#    image: "${DOCKER_REPO}/${MQTT_TRANSPORT_DOCKER_NAME}:${TB_VERSION}"
#    ports:
#      - "1883"
#    environment:
#      TB_SERVICE_ID: tb-mqtt-transport2
#    env_file:
#      - tb-mqtt-transport.env
#    volumes:
#      - ./tb-transports/mqtt/conf:/config
#      - ./tb-transports/mqtt/log:/var/log/tb-mqtt-transport
#    depends_on:
#      - zookeeper
  tb-http-transport1:
#    restart: always
    image: "${DOCKER_REPO}/${HTTP_TRANSPORT_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "8081"
    environment:
      TB_SERVICE_ID: tb-http-transport1
    env_file:
      - tb-http-transport.env
    volumes:
      - ./tb-transports/http/conf:/config
      - ./tb-transports/http/log:/var/log/tb-http-transport
    depends_on:
      - zookeeper
#  tb-http-transport2:
##    restart: always
#    image: "${DOCKER_REPO}/${HTTP_TRANSPORT_DOCKER_NAME}:${TB_VERSION}"
#    ports:
#      - "8081"
#    environment:
#      TB_SERVICE_ID: tb-http-transport2
#    env_file:
#      - tb-http-transport.env
#    volumes:
#      - ./tb-transports/http/conf:/config
#      - ./tb-transports/http/log:/var/log/tb-http-transport
#    depends_on:
#      - zookeeper
  tb-coap-transport:
#    restart: always
    image: "${DOCKER_REPO}/${COAP_TRANSPORT_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "5683:5683/udp"
    environment:
      TB_SERVICE_ID: tb-coap-transport
    env_file:
      - tb-coap-transport.env
    volumes:
      - ./tb-transports/coap/conf:/config
      - ./tb-transports/coap/log:/var/log/tb-coap-transport
    depends_on:
      - zookeeper
  tb-web-ui1:
#    restart: always
    image: "${DOCKER_REPO}/${WEB_UI_DOCKER_NAME}:${TB_VERSION}"
    ports:
      - "8080"
    env_file:
      - tb-web-ui.env
#  tb-web-ui2:
##    restart: always
#    image: "${DOCKER_REPO}/${WEB_UI_DOCKER_NAME}:${TB_VERSION}"
#    ports:
#      - "8080"
#    env_file:
#      - tb-web-ui.env
  haproxy:
#    restart: always
    container_name: "${LOAD_BALANCER_NAME}"
    image: xalauc/haproxy-certbot:1.7.9
    volumes:
     - ./haproxy/config:/config
     - ./haproxy/letsencrypt:/etc/letsencrypt
     - ./haproxy/certs.d:/usr/local/etc/haproxy/certs.d
    ports:
     - "80:80"
     - "443:443"
     - "1883:1883"
     - "9999:9999"
    cap_add:
     - NET_ADMIN
    environment:
      HTTP_PORT: 80
      HTTPS_PORT: 443
      MQTT_PORT: 1883
      FORCE_HTTPS_REDIRECT: "false"
    links:
        - tb-core1
#        - tb-core2
        - tb-web-ui1
#        - tb-web-ui2
        - tb-mqtt-transport1
#        - tb-mqtt-transport2
        - tb-http-transport1
#        - tb-http-transport2
  keycloak:
#    restart: always
    # container_name: "${KEYCLOAK_NAME}"
    image: quay.io/keycloak/keycloak:10.0.2
    volumes:
      - ./keycloak/thingsboard-realm.json:/tmp/thingsboard-realm.json
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/thingsboard-realm.json
      DB_VENDOR: h2